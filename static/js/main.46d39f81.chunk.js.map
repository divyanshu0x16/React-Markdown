{"version":3,"sources":["App.js","components/sampleText.js","reportWebVitals.js","index.js"],"names":["App","useState","text","setText","useEffect","savedText","localStorage","getItem","className","rows","onChange","event","target","value","setItem","dangerouslySetInnerHTML","__html","marked","sanitize","renderText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA2CeA,MArCf,WACI,MAAwBC,mBCNxB,kiBDMA,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAVAC,qBAAU,WACN,IAAMC,EAAYC,aAAaC,QAAQ,QACnCF,GAAWF,EAAQE,KACxB,IAQC,qBAAKG,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,0BACIA,UAAU,eACVC,KAAK,KACLC,SAtBK,SAACC,GACtBR,EAAQQ,EAAMC,OAAOC,OACrBP,aAAaQ,QAAQ,OAAQH,EAAMC,OAAOC,QAqB1BA,MAAOX,MAGf,qBAAKM,UAAU,WAAf,SACI,qBAAKO,wBAjBF,SAACb,GAEhB,MAAO,CAAEc,OADYC,IAAOf,EAAM,CAAEgB,UAAU,KAgBJC,CAAWjB,aExB9CkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46d39f81.chunk.js","sourcesContent":["import marked from \"marked\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { sampleText } from \"./components/sampleText\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n    const [text, setText] = useState(sampleText);\n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n        localStorage.setItem(\"text\", event.target.value);\n    };\n\n    useEffect(() => {\n        const savedText = localStorage.getItem(\"text\");\n        if (savedText) setText(savedText);\n    }, []);\n\n    const renderText = (text) => {\n        const markdownText = marked(text, { sanitize: true });\n        return { __html: markdownText };\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <textarea\n                        className=\"form-control\"\n                        rows=\"35\"\n                        onChange={handleTextChange}\n                        value={text}\n                    />\n                </div>\n                <div className=\"col-sm-6\">\n                    <div dangerouslySetInnerHTML={renderText(text)} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","export const sampleText =\n    '# Title\\n## Sub-Title \\n### Deeper title \\n \\n Paragraphs are separated\\n by an empty line.\\n\\n Leave two spaces at the end of a line\\n to go to the line.\\n\\n Attributs: *italic*, **bold**, \\n`monospace`, ~~striped~~.\\n\\n List:\\n\\n * apples\\n * oranges\\n * pears\\n\\n Numbered list:\\n\\n 1. tofu\\n 2. mushrooms\\n 3. bread\\n\\n Link with placeholder text: *[Medium](https://www.medium.com)* \\n\\n Simple link: https://www.medium.com/ \\n\\n Code: ```\\n console.log(\"Hello folks! I hoped you enjoyed this quick tutorial. Thanks for reading.\"); \\n``` ';\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}